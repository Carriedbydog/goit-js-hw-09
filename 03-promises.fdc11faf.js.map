{"mappings":"oeAAAA,EAAA,SA8BA,IAAuBC,EAAUC,GA3BpB,CACXC,KAAMC,SAASC,cAAc,WAI1BF,KAAKG,iBAAiB,UAAU,SAAUC,GAC7CA,EAAEC,gB,IAmBJC,QAAQC,IAAIC,WAEWV,EAcT,EAdmBC,EAchB,UAbFU,YAAW,KACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAQD,IAAK,CAC/B,MAAME,EAAgBC,KAAKC,SAAW,GAC5B,IAAIC,SAAQ,CAACC,EAASC,KAC1BL,EACFI,EAAQ,CAAElB,SAAUA,E,MAAUC,IAE9BkB,EAAO,CAAEnB,SAAUA,E,MAAUC,GAAQ,G,IAI1CA,IAGFmB,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBO,QAAQC,IAAI,uBAAqBT,QAAiBC,MAAU,IAE7DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBO,QAAQC,IAAI,sBAAoBT,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// =================================================================\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\n// =================================================================\nrefs.form.addEventListener('submit', function (e) {\n  e.preventDefault();\n});\n// =================================================================\n\nfunction createPromise(position, delay, step) {\n  const shouldResolve = Math.random() > 0.3;\n  for (let i = 0; i < position; i++) {\n    setTimeout(() => {\n      new Promise((resolve, reject) => {\n        if (shouldResolve) {\n          resolve();\n        } else {\n          // Reject\n        }\n      });\n    });\n  }\n}\n\nconsole.log(formData);\n\nfunction createPromise(position, delay) {\n  const time = setTimeout(() => {\n    for (let i = 0; i < amount; i++) {\n      const shouldResolve = Math.random() > 0.3;\n      const p = new Promise((resolve, reject) => {\n        if (shouldResolve) {\n          resolve({ position: position, delay });\n        } else {\n          reject({ position: position, delay });\n        }\n      });\n    }\n  }, delay);\n}\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["parcelRequire","position","delay","form","document","querySelector","addEventListener","e","preventDefault","console","log","formData","setTimeout","i","amount","shouldResolve","Math","random","Promise","resolve","reject","then","catch"],"version":3,"file":"03-promises.fdc11faf.js.map"}